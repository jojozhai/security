/*!
 * angular-ui-uploader
 * https://github.com/angular-ui/ui-uploader
 * Version: 1.1.3 - 2015-12-01T00:54:49.732Z
 * License: MIT
 */
!function(){"use strict";function o(o){function e(o){for(var e=0;e<o.length;e++)r.files.push(o[e])}function n(){return r.files}function i(o){r.options=o;for(var e=o.headers||{},n=0;n<r.files.length&&r.activeUploads!=r.options.concurrency;n++)r.files[n].active||a(r.files[n],r.options.url,r.options.data,e)}function t(o){r.files.splice(r.files.indexOf(o),1)}function l(){r.files.splice(0,r.files.length)}function s(o){var e=["n/a","bytes","KiB","MiB","GiB","TB","PB","EiB","ZiB","YiB"],n=0===o?0:+Math.floor(Math.log(o)/Math.log(1024));return(o/Math.pow(1024,n)).toFixed(n?1:0)+" "+e[isNaN(o)?0:n+1]}function a(o,e,n,t){var l,a,d,p="file";if(n=n||{},r.activeUploads+=1,o.active=!0,l=new window.XMLHttpRequest,n.withCredentials===!0&&(l.withCredentials=!0),a=new window.FormData,l.open("POST",e),t)for(var u in t)t.hasOwnProperty(u)&&l.setRequestHeader(u,t[u]);if(l.upload.onloadstart=function(){},l.upload.onprogress=function(e){e.lengthComputable&&(o.loaded=e.loaded,o.humanSize=s(e.loaded),angular.isFunction(r.options.onProgress)&&r.options.onProgress(o))},l.onload=function(){r.activeUploads-=1,r.uploadedFiles+=1,i(r.options),angular.isFunction(r.options.onCompleted)&&r.options.onCompleted(o,l.responseText,l.status),r.uploadedFiles===r.files.length&&(r.uploadedFiles=0,angular.isFunction(r.options.onCompletedAll)&&r.options.onCompletedAll(r.files))},l.onerror=function(o){angular.isFunction(r.options.onError)&&r.options.onError(o)},n)for(d in n)n.hasOwnProperty(d)&&a.append(d,n[d]);return a.append(p,o,o.name),l.send(a),l}var r=this;return r.files=[],r.options={},r.activeUploads=0,r.uploadedFiles=0,o.info("uiUploader loaded"),{addFiles:e,getFiles:n,files:r.files,startUpload:i,removeFile:t,removeAll:l}}angular.module("ui.uploader",[]).service("uiUploader",o),o.$inject=["$log"]}();